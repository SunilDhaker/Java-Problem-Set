import java.io.*;
import java.util.*;

public class P1 {

	private static Scanner input = new Scanner(System.in);

	public static void main(String[] args) {

		int option;
		int i;

		while (true) {

			System.out
					.println("1 . prob 1 \n2. Prob 2 \n3. prob 3 \n4. prob 4\n5. prob 5\n 0. To Exit");
			i = input.nextInt();
			if (i == 0)
				break;

			switch (i) {

			case 1:
				prob1();
				break;
			case 2:
				prob2();
				break;
			case 3:
				prob3();
				break;
			case 4:
				prob4();
				break;
			case 5:
				prob5();
				break;

			}

		}
	}

	private static void prob5() {

	}

	private static void prob4() {
		
		//read 
		int temp ;
		Vector<Integer> in = new Vector<Integer>();
		System.out.println("enter the integer  array  < 0 to teminate the input>");

		// taking input
		while (true) {
			temp = input.nextInt();
			if (temp == 0)
				break;
			in.add(temp);
		}
		
		/*
		 * MY ALGO
		 * 
		 * from first sum up the terms if(sum + next term  > sum ) then if()
 		 *   
		 * 
		 */

		int sum = 0 ;
		int asum = 0 , bsum ; ///starting and end index of sum
		int max = in.get(0) ;
		int amax= 0 , bmax  = 0; // index of maximas
		
		for(int i = 0 ; i < in.size() ; i++){
			
			if(sum + in.get(i) > sum){
				sum += in.get(i);
				bsum = i ;
				if(sum > max){
					
					max = sum ;
					amax = asum ;
					bmax = bsum ;
				}
			}else{
				
				if(sum  + in.get(i) <= 0){
					
					sum = 0;
					asum =  i + 1;
					bsum =  i + 1 ;
				}else{
					
					sum  = sum + in.get(i);
					bsum = i ;
				}
			}
		}
		
		
		System.out.println("max sum is " + max + "sub sequence is "+ in.subList(amax, bmax));
		
	}

	private static void prob3() {
		
	}

	private static void prob2() {
		// taking the input
		System.out.println("enter the String To compress ::");
		String in = input.next();

		String out = "";
		int freq = 1;

		// doing the stuff ..
		char last = in.charAt(0);
		char a  = ' ';
		for (int i = 1; i < in.length(); i++) {
			
			a = in.charAt(i);

			if (last == a) {
				freq += 1;
			} else {

				out = out + last + freq ;
				freq = 1;
				last = a;
			}
			
		}
		out = out + last + freq ;
		System.out.println(out);
		

	}

	private static void prob1() {
		int temp;
		Vector<Integer> in = new Vector<Integer>();
		Vector<Integer> out = new Vector<Integer>();
		System.out
				.println("enter the integer  array  < -1 to teminate the input>");

		// taking input
		while (true) {
			temp = input.nextInt();
			if (temp == -1)
				break;
			in.add(temp);
		}

		System.out.println("enter the index to rotate around");
		temp = input.nextInt();

		// doing the rotation

		if (temp >= in.size()) {
			System.out.println("the index is out of array bound");
		} else {

			for (int j = 0; j < in.size(); j++) {

				out.add(in.get((temp + j) % in.size()));

			}

		}

		// printing the output

		System.out.println("after rotation >> " + out);

	}
}
